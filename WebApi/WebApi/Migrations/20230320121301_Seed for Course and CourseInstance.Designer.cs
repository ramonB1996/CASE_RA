// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.DAL;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20230320121301_Seed for Course and CourseInstance")]
    partial class SeedforCourseandCourseInstance
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Domain.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "",
                            Duration = 5,
                            Title = "Programming C#"
                        },
                        new
                        {
                            Id = 2,
                            Code = "",
                            Duration = 2,
                            Title = "ECMAscript - What's new"
                        },
                        new
                        {
                            Id = 3,
                            Code = "",
                            Duration = 5,
                            Title = "Querying SQL Server"
                        },
                        new
                        {
                            Id = 4,
                            Code = "",
                            Duration = 2,
                            Title = "Java Persistence API"
                        },
                        new
                        {
                            Id = 5,
                            Code = "",
                            Duration = 3,
                            Title = "Building a SPA with VueJS"
                        },
                        new
                        {
                            Id = 6,
                            Code = "",
                            Duration = 5,
                            Title = "ASP.NET MVC"
                        });
                });

            modelBuilder.Entity("WebApi.Domain.CourseInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseInstances", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            StartDate = new DateTime(2018, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            StartDate = new DateTime(2018, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            StartDate = new DateTime(2018, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            StartDate = new DateTime(2018, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            StartDate = new DateTime(2018, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 6,
                            StartDate = new DateTime(2018, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebApi.Domain.CourseInstance", b =>
                {
                    b.HasOne("WebApi.Domain.Course", "Course")
                        .WithMany("CourseInstances")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("WebApi.Domain.Course", b =>
                {
                    b.Navigation("CourseInstances");
                });
#pragma warning restore 612, 618
        }
    }
}
